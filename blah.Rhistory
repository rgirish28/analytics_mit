install.packages("flexclust")
library(flexclust)
kos = read.csv("dailykos.csv")
distances = dist(kos, method = "euclidean")
help(hclust)
kosClusters = hclust(distances, method = "ward.D")
plot(kosClusters)
kosSelection = cutree(kosClusters, k = 7)
kos1 = subset(kos, kosSelection == 1)
kos2 = subset(kos, kosSelection == 2)
kos3 = subset(kos, kosSelection == 3)
kos4 = subset(kos, kosSelection == 4)
kos5 = subset(kos, kosSelection == 5)
kos6 = subset(kos, kosSelection == 6)
kos7 = subset(kos, kosSelection == 7)
str(kos3)
nrow(kos1)
nrow(kos2)
nrow(kos3)
nrow(kos4)
nrow(kos5)
nrow(kos6)
nrow(kos7)
tail(sort(colMeans(kos1)))
tail(sort(colMeans(kos2)))
tail(sort(colMeans(kos3)))
tail(sort(colMeans(kos4)))
tail(sort(colMeans(kos5)))
tail(sort(colMeans(kos6)))
tail(sort(colMeans(kos7)))
set.seed(1000)
help(kmeans)
kmeansClusters = kmeans(kos, 7)
kos3_means = subset(kos, kmeansClusters == 3)
str(kmeansClusters)
table(kmeansClusters$cluster)
str(kmeansClusters)
kos3_means = subset(kos, kmeansClusters$cluster == 3)
kos4_means = subset(kos, kmeansClusters$cluster == 4)
kos5_means = subset(kos, kmeansClusters$cluster == 5)
kos6_means = subset(kos, kmeansClusters$cluster == 6)
kos7_means = subset(kos, kmeansClusters$cluster == 7)
kos2_means = subset(kos, kmeansClusters$cluster == 2)
kos1_means = subset(kos, kmeansClusters$cluster == 1)
tail(sort(colMeans(kos1_means)))
tail(sort(colMeans(kos2_means)))
tail(sort(colMeans(kos3_means)))
tail(sort(colMeans(kos4_means)))
tail(sort(colMeans(kos5_means)))
tail(sort(colMeans(kos6_means)))
tail(sort(colMeans(kos7_means)))
table(kosSelection, KmeansCluster$cluster)
table(kosSelection, kmeansCluster$cluster)
table(kosSelection, kmeansClusters$cluster)
table(kosSelection, kmeansClusters$cluster)
airlines = read.csv("AirlinesCluster.csv")
summary(airlines)
library(caret)
preproc = preProcess(airlines)
airlinesNorm = predict(preproc, airlines)
summary(airlinesNorm)
distances = dist(airlinesNorm, method = "ward.D")
distances = dist(airlinesNorm, method = "ward")
distances = dist(airlinesNorm, method = ward.D)
distances = dist(airlinesNorm, method = "euclidean")
airlinesHClust = hclust(distances, method = "ward.D")
plot(airlinesHClust)
airlinesClusters = cutree(airlinesHClust, k = 5)
table(airlinesClusters)
tapply(airlines$Balance, clusterGroups, mean)
tapply(airlines$Balance, airlinesClusters, mean)
tapply(airlines$QualMiles, airlinesClusters, mean)
tapply(airlines$BonusMiles, airlinesClusters, mean)
tapply(airlines$BonusTrans, airlinesClusters, mean)
tapply(airlines$FlightMiles, airlinesClusters, mean)
tapply(airlines$FlightTrans, airlinesClusters, mean)
tapply(airlines$DaysSinceEnroll, airlinesClusters, mean)
set.seed(88)
kmeansClusters = kmeans(airlinesNorm, k=5)
kmeansClusters = kmeans(airlinesNorm, 5)
table(kmeansClusters$cluster)
summary(kmeansClusters)
str(kmeansClusters)
kmeansClust$centers
kmeansClusters$centers
tapply(airlines$Balance, kmeansClusters, mean)
tapply(airlines$Balance, kmeansClusters$cluster, mean)
tapply(airlines$QualMiles, kmeansClusters$cluster, mean)
tapply(airlines$BonusMiles, kmeansClusters$cluster, mean)
tapply(airlines$BonusTrans, kmeansClusters$cluster, mean)
tapply(airlines$FlightMiles, kmeansClusters$cluster, mean)
tapply(airlines$FlightTrans, kmeansClusters$cluster, mean)
tapply(airlines$DaysSinceEnroll, kmeansClusters$cluster, mean)
stocks = read.csv("StocksCluster.csv")
str(stocks)
table(ReturnDec)
table(stocks$ReturnDec)
table(stocks$PositiveDec)
6324/11580
cor(stocks)
summary(stocks)
set.seed(144)
spl = sample.split(stocks$PositiveDec, SplitRatio = 0.7)
stocksTrain = subset(stocks, spl == TRUE)
set.seed(144)
install.packages(caTools)
library(caTools)
spl = sample.split(stocks$PositiveDec, SplitRatio = 0.7)
stocksTrain = subset(stocks, spl == TRUE)
stocksTest = subset(stocks, spl == FALSE)
 StocksModel = glm(PositiveDec ~ ., data = stocksTrain, family = binomial)
predictions = predict(StocksModel)
table(stocksTrain$PositiveDec, predictions > 0.5)
3324+737
4061/nrow(stocksTrain)
table(stocksTrain$PositiveDec, predictions >= 0.5)
3324+737
4061/nrow(stocksTrain)
predictions = predict(StocksModel, type = "response")
table(stocksTrain$PositiveDec, predictions >= 0.5)
990+3640
4630/nrow(stocksTrain)
predictions = predict(StocksModel, newdata = stocksTest, type = "response")
table(stocksTest$PositiveDec, predictions >= 0.5)
417+1553
1970/nrow(stocksTest)
table(stocksTest$PositiveDec)
1897/nrow(stocksTest)
limitedTrain = stocksTrain
limitedTrain$PositiveDec = NULL
limitedTest = stocksTest
limitedTest$PositiveDec = NULL
library(caret)
preproc = preProcess(limitedTrain)
normTrain = predict(preproc, limitedTrain)
normTest = predict(preproc, limitedTest)
summary(normTrain)
summary(normTest)
set.seed(144)
km = kmeans(normTrain, 3)
table(km$cluster)
library(flexclust)
km.kcca = as.kcca(km, normTrain)
clusterTrain = predict(km.kcca)
clusterTest = predict(km.kcca, newdata=normTest)
table(clusterTest)
stocksTrain1 = subset(stocksTrain, km$cluster == 1)
stocksTrain2 = subset(stocksTrain, km$cluster == 2)
stocksTrain3 = subset(stocksTrain, km$cluster == 3)
summary(stocksTrain1)
summary(stocksTrain2)
summary(stocksTrain3)
StocksModel1 = glm(PositiveDec ~ ., data = stocksTrain1, family = binomial)
StocksModel2 = glm(PositiveDec ~ ., data = stocksTrain2, family = binomial)
StocksModel3 = glm(PositiveDec ~ ., data = stocksTrain3, family = binomial)
summary(StocksModel1)
summary(StocksModel2)
summary(StocksModel3)
stocksTest1 = subset(stocksTest, km$cluster == 1)
stocksTest2 = subset(stocksTest, km$cluster == 2)
stocksTest3 = subset(stocksTest, km$cluster == 3)
PredictTest1 = predict(StocksModel1, newdata = stocksTest1, type = "response")
PredictTest2 = predict(StocksModel1, newdata = stocksTest2, type = "response")
PredictTest3 = predict(StocksModel3, newdata = stocksTest3, type = "response")
PredictTest2 = predict(StocksModel2, newdata = stocksTest2, type = "response")
table(stocksTest3$PositiveDec, PredictTest3 > 0.5)
69+39
108/nrow(stocksTest3)
table(stocksTest2$PositiveDec, PredictTest2 > 0.5)
361+862
1223/nrow(stocksTest2)
nrow(stocksTest2)
table(stocksTest2$PositiveDec, PredictTest2 > 0.5)
361+301+862+686
1223/2210
108/(108+94+19)
table(stocksTest3$PositiveDec, PredictTest1 > 0.5)
table(stocksTest1$PositiveDec, PredictTest1 > 0.5)
101+498
599/(599+103+341)
PredictTest2 = predict(StocksModel2, newdata = stocksTest2, type = "response")
PredictTest3 = predict(StocksModel3, newdata = stocksTest3, type = "response")
PredictTest1 = predict(StocksModel1, newdata = stocksTest1, type = "response")
table(stocksTest1$PositiveDec, PredictTest1 > 0.5)
AllPredictions = c(PredictTest1, PredictTest2, PredictTest3)
AllOutcomes = c(stocksTest1$PositiveDec, stocksTest2$PositiveDec, stocksTest3$PositiveDec)
table(AllOutcomes, AllPredictions > 0.5)
1399+531
1930/(1046+498)
1930/(1046+498+1930)
> PredictTest2 = predict(StocksModel2, newdata = stocksTest2, type = "response")
> PredictTest3 = predict(StocksModel3, newdata = stocksTest3, type = "response")
PredictTest1 = predict(StocksModel1, newdata = stocksTest1, type = "response")
table(stocksTest1$PositiveDec, PredictTest1 > 0.5)
nrow(stocksTest1)
summary(stocksTest1)
str(stocksTest1)
101+498
599/(103+341+599)
set.seed("default)
set.seed("default")
set.seed(default)
set.seed(kind="default")
set.seed(NULL)
PredictTest2 = predict(StocksModel2, newdata = stocksTest2, type = "response")
PredictTest1 = predict(StocksModel1, newdata = stocksTest1, type = "response")
PredictTest3 = predict(StocksModel3, newdata = stocksTest3, type = "response")
table(stocksTest1$PositiveDec, PredictTest1 > 0.5)
StocksModel1 = glm(PositiveDec ~ ., data = stocksTrain1, family = binomial)
StocksModel2 = glm(PositiveDec ~ ., data = stocksTrain2, family = binomial)
StocksModel3 = glm(PositiveDec ~ ., data = stocksTrain3, family = binomial)
PredictTest1 = predict(StocksModel1, newdata = stocksTest1, type = "response")
PredictTest2 = predict(StocksModel2, newdata = stocksTest2, type = "response")
PredictTest3 = predict(StocksModel3, newdata = stocksTest3, type = "response")
table(stocksTest1$PositiveDec, PredictTest1 > 0.5)
savehistory(file = "blah.Rhistory")
